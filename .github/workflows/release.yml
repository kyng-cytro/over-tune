name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Version & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Create Release PR or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Get Changelog Content
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          awk '/^## /{if (p) exit; p=1} p' CHANGELOG.md > notes.txt
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          cat notes.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Extension Zip to GitHub Release
        if: steps.changesets.outputs.hasChangesets == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.changesets.outputs.VERSION }}
          name: Over Tune v${{ steps.changesets.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.NOTES }}
          files: release/release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
